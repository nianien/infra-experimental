AWSTemplateFormatVersion: '2010-09-09'
Description: 'ECS deployment pipeline (GitHub → CodeBuild → CloudFormation → ECS)'

Parameters:

  # =========================================================
  # Required Parameters
  # =========================================================

  PipelineName:
    Type: String
    Description: 'CodePipeline name (format: <service>-<env>)'

  ServiceName:
    Type: String
    Description: 'ECS service name (e.g. demo-rpc or demo-api)'

  SdRegistryId:
    Type: String
    Description: 'Cloud Map service ID (format: srv-<17-hex>)'

  RepoName:
    Type: String
    Description: 'GitHub repository (format: <org>/<repo>)'

  AppEnv:
    Type: String
    Default: 'default'
    AllowedValues: [ default, dev, test, preonline, online ]
    Description: 'Deployment environment (allowed: default, dev, test, preonline, online)'

  # =========================================================
  # Optional Parameters
  # =========================================================

  BranchName:
    Type: String
    Default: 'main'
    Description: 'Git branch (default: main)'

    ModulePath:
      Type: String
      Default: '.'
      Description: 'Module path (relative to project root)'

    ConnectionArn:
      Type: String
      Default: 'arn:aws:codeconnections:us-east-1:297997107448:connection/9adfd918-2843-4147-9bc9-c4ee1a99bc39'
      Description: 'CodeStar connection ARN (GitHub integration)'

    ArtifactBucketName:
      Type: String
      Default: 'codepipeline-us-east-1-3622cd43956e-4d23-9284-a18746ff6c07'
      Description: 'S3 artifact bucket for CodePipeline artifacts'

    TemplatePath:
      Type: String
      Default: 'ci/ecs-service-deploy.yaml'
      Description: 'CloudFormation template path (relative to source root)'

    BuildSpec:
      Type: String
      Default: 'ci/buildspec.yaml'
      Description: 'CodeBuild buildspec file path (relative to source root)'

    ContainerImage:
      Type: String
      Default: 'aws/codebuild/standard:7.0'
      Description: 'CodeBuild container image (choose from AWS standard runtimes)'

    CloudFormationDeployRoleArn:
      Type: String
      Default: 'arn:aws:iam::297997107448:role/CloudFormationDeployRole'
      Description: 'CloudFormation deployment role ARN (used by CodePipeline Deploy action)'

    CodePipelineRoleArn:
      Type: String
      Default: 'arn:aws:iam::297997107448:role/CodePipelineRole'
      Description: 'CodePipeline service role ARN (default project role)'

    CodeBuildRoleArn:
      Type: String
      Default: 'arn:aws:iam::297997107448:role/CodeBuildRole'
      Description: 'CodeBuild service role ARN (used for image build and artifact upload)'


Resources:

  # ---------------- CodeBuild Project----------------
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub '${PipelineName}-build'
      ServiceRole: !Ref CodeBuildRoleArn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        Image: !Ref ContainerImage
        ComputeType: BUILD_GENERAL1_SMALL
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: MODULE_PATH
            Type: PLAINTEXT
            Value: !Ref ModulePath
          - Name: SERVICE_NAME
            Type: PLAINTEXT
            Value: !Ref ServiceName
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Ref BuildSpec
      TimeoutInMinutes: 60

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Ref PipelineName
      RoleArn: !Ref CodePipelineRoleArn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucketName

      Variables:
        - Name: LANE
          DefaultValue: 'default'
          Description: 'Lane name'
        - Name: BRANCH
          DefaultValue: !Ref BranchName
          Description: 'Branch name'

      Stages:
        - Name: Source
          Actions:
            - Name: GitHubSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: '1'
              Configuration:
                ConnectionArn: !Ref ConnectionArn
                FullRepositoryId: !Ref RepoName
                BranchName: !Ref BranchName
                OutputArtifactFormat: CODE_ZIP
                DetectChanges: false
              OutputArtifacts:
                - Name: SourceOut

        - Name: Build
          Actions:
            - Name: DockerBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref CodeBuildProject
                EnvironmentVariables: !Sub |
                  [
                    {"name":"LANE","value":"#{variables.LANE}","type":"PLAINTEXT"},
                    {"name":"BRANCH","value":"#{variables.BRANCH}","type":"PLAINTEXT"}
                  ]
              InputArtifacts:
                - Name: SourceOut
              OutputArtifacts:
                - Name: BuildOut

        - Name: Deploy
          Actions:
            - Name: CFNDeploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: SourceOut
                - Name: BuildOut
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: !Sub '${ServiceName}-#{variables.LANE}'
                TemplatePath: !Sub 'SourceOut::${TemplatePath}'
                TemplateConfiguration: 'BuildOut::cfn-params.json'
                RoleArn: !Ref CloudFormationDeployRoleArn
                Capabilities: 'CAPABILITY_IAM,CAPABILITY_NAMED_IAM'
                ParameterOverrides: !Sub |
                  {
                    "ServiceBase": "${ServiceName}",
                    "AppEnv": "${AppEnv}",
                    "Lane": "#{variables.LANE}",
                    "SdRegistryArn": "arn:aws:servicediscovery:${AWS::Region}:${AWS::AccountId}:service/${SdRegistryId}"
                  }

      RestartExecutionOnUpdate: true

Outputs:
  PipelineNameOut:
    Value: !Ref PipelineName
  CodeBuildProjectOut:
    Value: !Ref CodeBuildProject