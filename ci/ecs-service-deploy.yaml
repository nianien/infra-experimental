AWSTemplateFormatVersion: '2010-09-09'
Description: 'ECS Service + TaskDefinition (SRV registration via existing Cloud Map Namespace)'

Parameters:
  # ================= Basic Parameters =================
  ServiceBase:
    Type: String
    Description: 'Service base name (e.g. demo-rpc or web-api)'

  Lane:
    Type: String
    Default: 'default'
    Description: 'Deployment lane name (passed from pipeline variable)'

  ImageUri:
    Type: String
    Description: 'Container image URI (generated by buildspec.yaml)'

  DesiredCount:
    Type: Number
    Default: 1
    Description: 'Desired ECS service instance count'

  # ================= Resource Specification =================
  Cpu:
    Type: String
    Default: '512'
    Description: 'vCPU units (1024 = 1 vCPU)'

  Memory:
    Type: String
    Default: '1024'
    Description: 'Memory in MB'

  # ================= Application Configuration =================
  AppEnv:
    Type: String
    Default: 'default'
    AllowedValues: [ default, dev, test, preonline, online ]
    Description: 'Application environment (allowed: default, dev, test, preonline, online)'

  WebServerPort:
    Type: Number
    Default: 8080
    Description: 'Web server port'

  RpcServerPort:
    Type: Number
    Default: 8081
    Description: 'RPC server port (registered to Cloud Map SRV record)'

  # ================= Infrastructure Dependencies =================
  ClusterName:
    Type: String
    Default: 'demo-cluster'
    Description: 'ECS cluster name'

  ExecutionRoleArn:
    Type: String
    Default: 'arn:aws:iam::297997107448:role/ecsTaskExecutionRole'
    Description: 'ECS task execution role ARN (pulls image and manages logs)'

  TaskRoleArn:
    Type: String
    Default: 'arn:aws:iam::297997107448:role/ecsTaskRole'
    Description: 'ECS task role ARN (runtime IAM permissions)'

  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
    Default: 'subnet-02c0811a961e428b5,subnet-0d3bc6916292f848c'
    Description: 'List of subnet IDs for service deployment'

  SecurityGroups:
    Type: List<AWS::EC2::SecurityGroup::Id>
    Default: 'sg-00a34a14c1889ddfc'
    Description: 'List of security group IDs for service tasks'

  AssignPublicIp:
    Type: String
    AllowedValues: [ ENABLED, DISABLED ]
    Default: 'ENABLED'
    Description: 'Whether to assign a public IP (allowed: ENABLED, DISABLED)'

  # ================= Cloud Map =================
  SdRegistryArn:
    Type: String
    Description: 'Cloud Map service ARN (format: arn:aws:servicediscovery:<region>:<account>:service/srv-<id>)'

Conditions:
  LaneIsDefault: !Equals [ !Ref Lane, 'default' ]
  LaneIsEmpty: !Equals [ !Ref Lane, '' ]
  LaneAsDefault: !Or
    - !Condition LaneIsDefault
    - !Condition LaneIsEmpty

Resources:

  TaskDef:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub '${ServiceBase}-task'
      RequiresCompatibilities: [ FARGATE ]
      NetworkMode: awsvpc
      Cpu: !Ref Cpu
      Memory: !Ref Memory
      ExecutionRoleArn: !Ref ExecutionRoleArn
      TaskRoleArn: !Ref TaskRoleArn
      RuntimePlatform:
        CpuArchitecture: X86_64
        OperatingSystemFamily: LINUX
      ContainerDefinitions:
        - Name: !Ref ServiceBase
          Image: !Ref ImageUri
          Essential: true
          PortMappings:
            - Name: !Sub '${ServiceBase}-${WebServerPort}-tcp'
              ContainerPort: !Ref WebServerPort
              Protocol: tcp
              AppProtocol: http
            - Name: !Sub '${ServiceBase}-${RpcServerPort}-tcp'
              ContainerPort: !Ref RpcServerPort
              Protocol: tcp
              AppProtocol: grpc
          Environment:
            - Name: APP_ENV
              Value: !Ref AppEnv
            - Name: SPRING_PROFILES_ACTIVE
              Value: !Ref AppEnv
            - Name: WEB_SERVER_PORT
              Value: !Ref WebServerPort
            - Name: RPC_SERVER_PORT
              Value: !Ref RpcServerPort
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Sub '/ecs/${ServiceBase}'
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: !If
                - LaneAsDefault
                - 'default'
                - !Ref Lane

  Service:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !If
        - LaneAsDefault
        - !Sub '${ServiceBase}-default'
        - !Sub '${ServiceBase}-${Lane}'
      Cluster: !Ref ClusterName
      LaunchType: FARGATE
      DesiredCount: !Ref DesiredCount
      TaskDefinition: !Ref TaskDef
      DeploymentConfiguration:
        DeploymentCircuitBreaker:
          Enable: true
          Rollback: true
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets: !Ref Subnets
          SecurityGroups: !Ref SecurityGroups
          AssignPublicIp: !Ref AssignPublicIp
      ServiceRegistries:
        - RegistryArn: !Ref SdRegistryArn
          ContainerName: !Ref ServiceBase
          ContainerPort: !Ref RpcServerPort
      EnableECSManagedTags: true
      PropagateTags: SERVICE
      SchedulingStrategy: REPLICA
      DeploymentController:
        Type: ECS
      Tags: !If
        - LaneAsDefault
        - !Ref 'AWS::NoValue'
        - - Key: Lane
            Value: !Ref Lane

Outputs:
  ServiceArn:
    Description: 'ECS Service ARN'
    Value: !Ref Service
  TaskDefinitionArn:
    Description: 'ECS TaskDefinition ARN'
    Value: !Ref TaskDef
  DiscoveryServiceArn:
    Description: 'Cloud Map Service ARN'
    Value: !Ref SdRegistryArn