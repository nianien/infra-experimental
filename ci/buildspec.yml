version: 0.2

phases:
  pre_build:
    commands:
      - "set -euo pipefail"
      - "aws --version"
      - "test -n \"${ECR_REPO_URI:-}\" || { echo 'ECR_REPO_URI env missing' >&2; exit 1; }"
      - "echo Ensuring ECR repo exists: $ECR_REPO_URI"
      - "REPONAME=$(echo \"$ECR_REPO_URI\" | awk -F/ '{print $2}')"
      - "aws ecr describe-repositories --repository-names \"$REPONAME\" >/dev/null 2>&1 || aws ecr create-repository --repository-name \"$REPONAME\" >/dev/null"
      - "REGISTRY_HOST=$(echo \"$ECR_REPO_URI\" | awk -F/ '{print $1}')"
      - "aws ecr get-login-password | docker login --username AWS --password-stdin \"$REGISTRY_HOST\""
      - "FMT=\"${IMAGE_TAG_FORMAT:-commit7}\""
      - "if [ \"$FMT\" = \"commit7\" ] && [ -n \"${CODEBUILD_RESOLVED_SOURCE_VERSION:-}\" ]; then IMAGE_TAG=$(echo \"$CODEBUILD_RESOLVED_SOURCE_VERSION\" | cut -c1-7); elif [ \"$FMT\" = \"timestamp\" ]; then IMAGE_TAG=$(date +%Y%m%d%H%M%S); else IMAGE_TAG=latest; fi"
      - "echo Using image tag: $IMAGE_TAG"

  build:
    commands:
      - "if [ -f pom.xml ]; then echo '== Maven build =='; mvn -B -q -DskipTests clean package; else echo 'No pom.xml, skip Maven'; fi"
      - "DF=\"${DOCKERFILE_PATH:-Dockerfile}\""
      - "test -f \"$DF\" || { echo \"Dockerfile not found: $DF\" >&2; exit 1; }"
      - "echo == Docker build =="
      - "docker build -f \"$DF\" -t \"$ECR_REPO_URI:$IMAGE_TAG\" ."
      - "docker push \"$ECR_REPO_URI:$IMAGE_TAG\""

  post_build:
    commands:
      - "IMAGE_URI=\"$ECR_REPO_URI:$IMAGE_TAG\""
      - "printf '{\"Parameters\":{\"ImageUri\":\"%s\"}}\\n' \"$IMAGE_URI\" > cfn-params.json"
      - "echo Wrote cfn-params.json with ImageUri=$IMAGE_URI"

artifacts:
  files:
    - "cfn-params.json"